"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[62777],{47140:(e,t,o)=>{o.r(t),o.d(t,{data:()=>n});const n=JSON.parse('{"key":"v-7b6a1563","path":"/devices/DIYRuZ_FreePad.html","title":"DIYRuZ DIYRuZ_FreePad control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"DIYRuZ DIYRuZ_FreePad control via MQTT","description":"Integrate your DIYRuZ DIYRuZ_FreePad via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-05-19T20:48:40.000Z"},"excerpt":"","headers":[{"level":2,"title":"Notes","slug":"notes","link":"#notes","children":[{"level":3,"title":"Firmware","slug":"firmware","link":"#firmware","children":[]},{"level":3,"title":"How to join:","slug":"how-to-join","link":"#how-to-join","children":[]},{"level":3,"title":"How to use touch link","slug":"how-to-use-touch-link","link":"#how-to-use-touch-link","children":[]}]},{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Battery (numeric)","slug":"battery-numeric","link":"#battery-numeric","children":[]},{"level":3,"title":"Action (enum)","slug":"action-enum","link":"#action-enum","children":[]},{"level":3,"title":"Switch type (enum, button_1 endpoint)","slug":"switch-type-enum-button-1-endpoint","link":"#switch-type-enum-button-1-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_1 endpoint)","slug":"switch-actions-enum-button-1-endpoint","link":"#switch-actions-enum-button-1-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_2 endpoint)","slug":"switch-type-enum-button-2-endpoint","link":"#switch-type-enum-button-2-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_2 endpoint)","slug":"switch-actions-enum-button-2-endpoint","link":"#switch-actions-enum-button-2-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_3 endpoint)","slug":"switch-type-enum-button-3-endpoint","link":"#switch-type-enum-button-3-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_3 endpoint)","slug":"switch-actions-enum-button-3-endpoint","link":"#switch-actions-enum-button-3-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_4 endpoint)","slug":"switch-type-enum-button-4-endpoint","link":"#switch-type-enum-button-4-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_4 endpoint)","slug":"switch-actions-enum-button-4-endpoint","link":"#switch-actions-enum-button-4-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_5 endpoint)","slug":"switch-type-enum-button-5-endpoint","link":"#switch-type-enum-button-5-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_5 endpoint)","slug":"switch-actions-enum-button-5-endpoint","link":"#switch-actions-enum-button-5-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_6 endpoint)","slug":"switch-type-enum-button-6-endpoint","link":"#switch-type-enum-button-6-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_6 endpoint)","slug":"switch-actions-enum-button-6-endpoint","link":"#switch-actions-enum-button-6-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_7 endpoint)","slug":"switch-type-enum-button-7-endpoint","link":"#switch-type-enum-button-7-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_7 endpoint)","slug":"switch-actions-enum-button-7-endpoint","link":"#switch-actions-enum-button-7-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_8 endpoint)","slug":"switch-type-enum-button-8-endpoint","link":"#switch-type-enum-button-8-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_8 endpoint)","slug":"switch-actions-enum-button-8-endpoint","link":"#switch-actions-enum-button-8-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_9 endpoint)","slug":"switch-type-enum-button-9-endpoint","link":"#switch-type-enum-button-9-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_9 endpoint)","slug":"switch-actions-enum-button-9-endpoint","link":"#switch-actions-enum-button-9-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_10 endpoint)","slug":"switch-type-enum-button-10-endpoint","link":"#switch-type-enum-button-10-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_10 endpoint)","slug":"switch-actions-enum-button-10-endpoint","link":"#switch-actions-enum-button-10-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_11 endpoint)","slug":"switch-type-enum-button-11-endpoint","link":"#switch-type-enum-button-11-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_11 endpoint)","slug":"switch-actions-enum-button-11-endpoint","link":"#switch-actions-enum-button-11-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_12 endpoint)","slug":"switch-type-enum-button-12-endpoint","link":"#switch-type-enum-button-12-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_12 endpoint)","slug":"switch-actions-enum-button-12-endpoint","link":"#switch-actions-enum-button-12-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_13 endpoint)","slug":"switch-type-enum-button-13-endpoint","link":"#switch-type-enum-button-13-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_13 endpoint)","slug":"switch-actions-enum-button-13-endpoint","link":"#switch-actions-enum-button-13-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_14 endpoint)","slug":"switch-type-enum-button-14-endpoint","link":"#switch-type-enum-button-14-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_14 endpoint)","slug":"switch-actions-enum-button-14-endpoint","link":"#switch-actions-enum-button-14-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_15 endpoint)","slug":"switch-type-enum-button-15-endpoint","link":"#switch-type-enum-button-15-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_15 endpoint)","slug":"switch-actions-enum-button-15-endpoint","link":"#switch-actions-enum-button-15-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_16 endpoint)","slug":"switch-type-enum-button-16-endpoint","link":"#switch-type-enum-button-16-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_16 endpoint)","slug":"switch-actions-enum-button-16-endpoint","link":"#switch-actions-enum-button-16-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_17 endpoint)","slug":"switch-type-enum-button-17-endpoint","link":"#switch-type-enum-button-17-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_17 endpoint)","slug":"switch-actions-enum-button-17-endpoint","link":"#switch-actions-enum-button-17-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_18 endpoint)","slug":"switch-type-enum-button-18-endpoint","link":"#switch-type-enum-button-18-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_18 endpoint)","slug":"switch-actions-enum-button-18-endpoint","link":"#switch-actions-enum-button-18-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_19 endpoint)","slug":"switch-type-enum-button-19-endpoint","link":"#switch-type-enum-button-19-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_19 endpoint)","slug":"switch-actions-enum-button-19-endpoint","link":"#switch-actions-enum-button-19-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_20 endpoint)","slug":"switch-type-enum-button-20-endpoint","link":"#switch-type-enum-button-20-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_20 endpoint)","slug":"switch-actions-enum-button-20-endpoint","link":"#switch-actions-enum-button-20-endpoint","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1721326626000},"filePathRelative":"devices/DIYRuZ_FreePad.md"}')},744987:(e,t,o)=>{o.r(t),o.d(t,{default:()=>g});var n=o(166252);const i=(0,n._)("h1",{id:"diyruz-diyruz-freepad",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#diyruz-diyruz-freepad","aria-hidden":"true"},"#"),(0,n.Uk)(" DIYRuZ DIYRuZ_FreePad")],-1),c=(0,n._)("thead",null,[(0,n._)("tr",null,[(0,n._)("th"),(0,n._)("th")])],-1),d=(0,n._)("tr",null,[(0,n._)("td",null,"Model"),(0,n._)("td",null,"DIYRuZ_FreePad")],-1),u=(0,n._)("td",null,"Vendor",-1),a=(0,n._)("tr",null,[(0,n._)("td",null,"Description"),(0,n._)("td",null,"DiY 8/12/20 button keypad")],-1),s=(0,n._)("tr",null,[(0,n._)("td",null,"Exposes"),(0,n._)("td",null,"battery, action, switch_type, switch_actions, linkquality")],-1),h=(0,n._)("tr",null,[(0,n._)("td",null,"Picture"),(0,n._)("td",null,[(0,n._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DIYRuZ_FreePad.png",alt:"DIYRuZ DIYRuZ_FreePad"})])],-1),p=(0,n._)("h2",{id:"notes",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#notes","aria-hidden":"true"},"#"),(0,n.Uk)(" Notes")],-1),l={href:"http://modkam.ru/?p=1114",target:"_blank",rel:"noopener noreferrer"},b=(0,n._)("h3",{id:"firmware",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#firmware","aria-hidden":"true"},"#"),(0,n.Uk)(" Firmware")],-1),r={href:"https://github.com/diyruz/freepad",target:"_blank",rel:"noopener noreferrer"},_=(0,n.uE)('<h3 id="how-to-join" tabindex="-1"><a class="header-anchor" href="#how-to-join" aria-hidden="true">#</a> How to join:</h3><h4 id="if-device-in-fn-factory-new-state" tabindex="-1"><a class="header-anchor" href="#if-device-in-fn-factory-new-state" aria-hidden="true">#</a> If device in FN(factory new) state:</h4><ol><li>Press and hold button (1) for 2-3 seconds, until device start flashing led</li><li>Wait, in case of successful join, device will flash led 5 times</li><li>If join failed, device will flash led 3 times</li></ol><h4 id="if-device-in-a-network" tabindex="-1"><a class="header-anchor" href="#if-device-in-a-network" aria-hidden="true">#</a> If device in a network:</h4><ol><li>Hold button (1) for 10 seconds, this will reset device to FN(factory new) status</li><li>Go to step 1 for FN device</li></ol><h3 id="how-to-use-touch-link" tabindex="-1"><a class="header-anchor" href="#how-to-use-touch-link" aria-hidden="true">#</a> How to use touch link</h3><ol><li>Bring you remote near to TL device</li><li>Hold button (2) for 5 seconds TL functionality can work without connecting to network</li></ol>',7),w=(0,n.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric" aria-hidden="true">#</a> Battery (numeric)</h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum" aria-hidden="true">#</a> Action (enum)</h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>*_single</code>, <code>*_double</code>, <code>*_triple</code>, <code>*_quadruple</code>, <code>*_release</code>, <code>*_hold</code>.</p><h3 id="switch-type-enum-button-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-1-endpoint" aria-hidden="true">#</a> Switch type (enum, button_1 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_1&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-1-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_1 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_1&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-2-endpoint" aria-hidden="true">#</a> Switch type (enum, button_2 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_2&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-2-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_2 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_2&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-3-endpoint" aria-hidden="true">#</a> Switch type (enum, button_3 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_3&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-3-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_3 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_3&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-4-endpoint" aria-hidden="true">#</a> Switch type (enum, button_4 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_4&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-4-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_4 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_4&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-5-endpoint" aria-hidden="true">#</a> Switch type (enum, button_5 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_5&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-5-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_5 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_5&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-6-endpoint" aria-hidden="true">#</a> Switch type (enum, button_6 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_6&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-6-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_6 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_6&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-7-endpoint" aria-hidden="true">#</a> Switch type (enum, button_7 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_7&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-7-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_7 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_7&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-8-endpoint" aria-hidden="true">#</a> Switch type (enum, button_8 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_8&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-8-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_8 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_8&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-9-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-9-endpoint" aria-hidden="true">#</a> Switch type (enum, button_9 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_9&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_9&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-9-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-9-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_9 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_9&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_9&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-10-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-10-endpoint" aria-hidden="true">#</a> Switch type (enum, button_10 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_10&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_10&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-10-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-10-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_10 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_10&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_10&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-11-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-11-endpoint" aria-hidden="true">#</a> Switch type (enum, button_11 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_11&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_11&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-11-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-11-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_11 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_11&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_11&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-12-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-12-endpoint" aria-hidden="true">#</a> Switch type (enum, button_12 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_12&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_12&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-12-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-12-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_12 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_12&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_12&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-13-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-13-endpoint" aria-hidden="true">#</a> Switch type (enum, button_13 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_13&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_13&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-13-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-13-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_13 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_13&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_13&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-14-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-14-endpoint" aria-hidden="true">#</a> Switch type (enum, button_14 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_14&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_14&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-14-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-14-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_14 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_14&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_14&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-15-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-15-endpoint" aria-hidden="true">#</a> Switch type (enum, button_15 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_15&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_15&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-15-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-15-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_15 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_15&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_15&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-16-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-16-endpoint" aria-hidden="true">#</a> Switch type (enum, button_16 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_16&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_16&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-16-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-16-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_16 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_16&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_16&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-17-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-17-endpoint" aria-hidden="true">#</a> Switch type (enum, button_17 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_17</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_17&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_17&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-17-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-17-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_17 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_17</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_17&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_17&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-18-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-18-endpoint" aria-hidden="true">#</a> Switch type (enum, button_18 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_18</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_18&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_18&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-18-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-18-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_18 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_18</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_18&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_18&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-19-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-19-endpoint" aria-hidden="true">#</a> Switch type (enum, button_19 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_19</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_19&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_19&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-19-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-19-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_19 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_19</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_19&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_19&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-20-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-20-endpoint" aria-hidden="true">#</a> Switch type (enum, button_20 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_20</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_20&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_20&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-20-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-20-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_20 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_20</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_20&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_20&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',87),m={},g=(0,o(983744).Z)(m,[["render",function(e,t){const o=(0,n.up)("RouterLink"),m=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[(0,n.kq)(" !!!! "),(0,n.kq)(" ATTENTION: This file is auto-generated through docgen! "),(0,n.kq)(' You can only edit the "Notes"-Section between the two comment lines "Notes BEGIN" and "Notes END". '),(0,n.kq)(' Do not use h1 or h2 heading within "## Notes"-Section. '),(0,n.kq)(" !!!! "),i,(0,n._)("table",null,[c,(0,n._)("tbody",null,[d,(0,n._)("tr",null,[u,(0,n._)("td",null,[(0,n.Wm)(o,{to:"/supported-devices/#v=DIYRuZ"},{default:(0,n.w5)((()=>[(0,n.Uk)("DIYRuZ")])),_:1})])]),a,s,h])]),(0,n.kq)(' Notes BEGIN: You can edit here. Add "## Notes" headline if not already present. '),p,(0,n._)("p",null,[(0,n._)("a",l,[(0,n.Uk)("DiY 8/12/20 button keypad"),(0,n.Wm)(m)])]),b,(0,n._)("p",null,[(0,n.Uk)("Open source firmware can be found here: "),(0,n._)("a",r,[(0,n.Uk)("Github"),(0,n.Wm)(m)])]),_,(0,n.kq)(" Notes END: Do not edit below this line "),w])}]])}}]);