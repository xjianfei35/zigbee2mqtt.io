"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[19263],{488418:(e,o,t)=>{t.r(o),t.d(o,{data:()=>d});const d=JSON.parse('{"key":"v-17c66293","path":"/devices/M9-zigbee-SL.html","title":"Tuya M9-zigbee-SL control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya M9-zigbee-SL control via MQTT","description":"Integrate your Tuya M9-zigbee-SL via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-08-01T15:13:29.000Z"},"excerpt":"","headers":[{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Switch (l1 endpoint)","slug":"switch-l1-endpoint","link":"#switch-l1-endpoint","children":[]},{"level":3,"title":"Switch (l2 endpoint)","slug":"switch-l2-endpoint","link":"#switch-l2-endpoint","children":[]},{"level":3,"title":"Switch (l3 endpoint)","slug":"switch-l3-endpoint","link":"#switch-l3-endpoint","children":[]},{"level":3,"title":"Switch (l4 endpoint)","slug":"switch-l4-endpoint","link":"#switch-l4-endpoint","children":[]},{"level":3,"title":"Switch (l5 endpoint)","slug":"switch-l5-endpoint","link":"#switch-l5-endpoint","children":[]},{"level":3,"title":"Switch (l6 endpoint)","slug":"switch-l6-endpoint","link":"#switch-l6-endpoint","children":[]},{"level":3,"title":"Switch (l7 endpoint)","slug":"switch-l7-endpoint","link":"#switch-l7-endpoint","children":[]},{"level":3,"title":"Switch (l8 endpoint)","slug":"switch-l8-endpoint","link":"#switch-l8-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l1 endpoint)","slug":"power-on-behavior-enum-l1-endpoint","link":"#power-on-behavior-enum-l1-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l2 endpoint)","slug":"power-on-behavior-enum-l2-endpoint","link":"#power-on-behavior-enum-l2-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l3 endpoint)","slug":"power-on-behavior-enum-l3-endpoint","link":"#power-on-behavior-enum-l3-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l4 endpoint)","slug":"power-on-behavior-enum-l4-endpoint","link":"#power-on-behavior-enum-l4-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l5 endpoint)","slug":"power-on-behavior-enum-l5-endpoint","link":"#power-on-behavior-enum-l5-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l6 endpoint)","slug":"power-on-behavior-enum-l6-endpoint","link":"#power-on-behavior-enum-l6-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l7 endpoint)","slug":"power-on-behavior-enum-l7-endpoint","link":"#power-on-behavior-enum-l7-endpoint","children":[]},{"level":3,"title":"Power-on behavior (enum, l8 endpoint)","slug":"power-on-behavior-enum-l8-endpoint","link":"#power-on-behavior-enum-l8-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l1 endpoint)","slug":"switch-mode-enum-l1-endpoint","link":"#switch-mode-enum-l1-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l2 endpoint)","slug":"switch-mode-enum-l2-endpoint","link":"#switch-mode-enum-l2-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l3 endpoint)","slug":"switch-mode-enum-l3-endpoint","link":"#switch-mode-enum-l3-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l4 endpoint)","slug":"switch-mode-enum-l4-endpoint","link":"#switch-mode-enum-l4-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l5 endpoint)","slug":"switch-mode-enum-l5-endpoint","link":"#switch-mode-enum-l5-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l6 endpoint)","slug":"switch-mode-enum-l6-endpoint","link":"#switch-mode-enum-l6-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l7 endpoint)","slug":"switch-mode-enum-l7-endpoint","link":"#switch-mode-enum-l7-endpoint","children":[]},{"level":3,"title":"Switch mode (enum, l8 endpoint)","slug":"switch-mode-enum-l8-endpoint","link":"#switch-mode-enum-l8-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l1 endpoint)","slug":"light-mode-enum-l1-endpoint","link":"#light-mode-enum-l1-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l2 endpoint)","slug":"light-mode-enum-l2-endpoint","link":"#light-mode-enum-l2-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l3 endpoint)","slug":"light-mode-enum-l3-endpoint","link":"#light-mode-enum-l3-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l4 endpoint)","slug":"light-mode-enum-l4-endpoint","link":"#light-mode-enum-l4-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l5 endpoint)","slug":"light-mode-enum-l5-endpoint","link":"#light-mode-enum-l5-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l6 endpoint)","slug":"light-mode-enum-l6-endpoint","link":"#light-mode-enum-l6-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l7 endpoint)","slug":"light-mode-enum-l7-endpoint","link":"#light-mode-enum-l7-endpoint","children":[]},{"level":3,"title":"Light mode (enum, l8 endpoint)","slug":"light-mode-enum-l8-endpoint","link":"#light-mode-enum-l8-endpoint","children":[]},{"level":3,"title":"Backlight mode (binary)","slug":"backlight-mode-binary","link":"#backlight-mode-binary","children":[]},{"level":3,"title":"Action (enum)","slug":"action-enum","link":"#action-enum","children":[]},{"level":3,"title":"Presence (binary)","slug":"presence-binary","link":"#presence-binary","children":[]},{"level":3,"title":"Delay (numeric)","slug":"delay-numeric","link":"#delay-numeric","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1721326626000},"filePathRelative":"devices/M9-zigbee-SL.md"}')},331807:(e,o,t)=>{t.r(o),t.d(o,{default:()=>p});var d=t(166252);const i=(0,d._)("h1",{id:"tuya-m9-zigbee-sl",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#tuya-m9-zigbee-sl","aria-hidden":"true"},"#"),(0,d.Uk)(" Tuya M9-zigbee-SL")],-1),n=(0,d._)("thead",null,[(0,d._)("tr",null,[(0,d._)("th"),(0,d._)("th")])],-1),a=(0,d._)("tr",null,[(0,d._)("td",null,"Model"),(0,d._)("td",null,"M9-zigbee-SL")],-1),l=(0,d._)("td",null,"Vendor",-1),c=(0,d._)("tr",null,[(0,d._)("td",null,"Description"),(0,d._)("td",null,"Smart Switch (4 gang + 4 scene) with neutral wire and motion sensing")],-1),h=(0,d._)("tr",null,[(0,d._)("td",null,"Exposes"),(0,d._)("td",null,"switch (state), power_on_behavior, switch_mode, light_mode, backlight_mode, action, presence, delay, linkquality")],-1),s=(0,d._)("tr",null,[(0,d._)("td",null,"Picture"),(0,d._)("td",null,[(0,d._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/M9-zigbee-SL.png",alt:"Tuya M9-zigbee-SL"})])],-1),r=(0,d.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="switch-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l1-endpoint" aria-hidden="true">#</a> Switch (l1 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l1&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l2-endpoint" aria-hidden="true">#</a> Switch (l2 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l2&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l3-endpoint" aria-hidden="true">#</a> Switch (l3 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l3</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l3&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l3&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l3&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l4-endpoint" aria-hidden="true">#</a> Switch (l4 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l4</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l4&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l4&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l4&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l5-endpoint" aria-hidden="true">#</a> Switch (l5 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l5</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l5&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l5&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l5&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l6-endpoint" aria-hidden="true">#</a> Switch (l6 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l6</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l6&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l6&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l6&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l7-endpoint" aria-hidden="true">#</a> Switch (l7 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l7</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l7&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l7&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l7&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l8-endpoint" aria-hidden="true">#</a> Switch (l8 endpoint)</h3><p>The current state of this switch is in the published state under the <code>state_l8</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l8&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l8&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l8&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="power-on-behavior-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l1-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l1 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l2-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l2 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l3-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l3 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l4-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l4 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l5-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l5 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l6-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l6 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l7-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l7 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l8-endpoint" aria-hidden="true">#</a> Power-on behavior (enum, l8 endpoint)</h3><p>Controls the behavior when the device is powered on after power loss. If you get an <code>UNSUPPORTED_ATTRIBUTE</code> error, the device does not support it.. Value can be found in the published state on the <code>power_on_behavior_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="switch-mode-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l1-endpoint" aria-hidden="true">#</a> Switch mode (enum, l1 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l2-endpoint" aria-hidden="true">#</a> Switch mode (enum, l2 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l3-endpoint" aria-hidden="true">#</a> Switch mode (enum, l3 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l4-endpoint" aria-hidden="true">#</a> Switch mode (enum, l4 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l5-endpoint" aria-hidden="true">#</a> Switch mode (enum, l5 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l6-endpoint" aria-hidden="true">#</a> Switch mode (enum, l6 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l7-endpoint" aria-hidden="true">#</a> Switch mode (enum, l7 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l8-endpoint" aria-hidden="true">#</a> Switch mode (enum, l8 endpoint)</h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="light-mode-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l1-endpoint" aria-hidden="true">#</a> Light mode (enum, l1 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l2-endpoint" aria-hidden="true">#</a> Light mode (enum, l2 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l3-endpoint" aria-hidden="true">#</a> Light mode (enum, l3 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l4-endpoint" aria-hidden="true">#</a> Light mode (enum, l4 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l5-endpoint" aria-hidden="true">#</a> Light mode (enum, l5 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l6-endpoint" aria-hidden="true">#</a> Light mode (enum, l6 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l7-endpoint" aria-hidden="true">#</a> Light mode (enum, l7 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l8-endpoint" aria-hidden="true">#</a> Light mode (enum, l8 endpoint)</h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="backlight-mode-binary" tabindex="-1"><a class="header-anchor" href="#backlight-mode-binary" aria-hidden="true">#</a> Backlight mode (binary)</h3><p>Mode of the backlight. Value can be found in the published state on the <code>backlight_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;backlight_mode&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> backlight mode is ON, if <code>OFF</code> OFF.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum" aria-hidden="true">#</a> Action (enum)</h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>scene_1</code>, <code>scene_2</code>, <code>scene_3</code>, <code>scene_4</code>, <code>scene_5</code>, <code>scene_6</code>, <code>scene_7</code>, <code>scene_8</code>.</p><h3 id="presence-binary" tabindex="-1"><a class="header-anchor" href="#presence-binary" aria-hidden="true">#</a> Presence (binary)</h3><p>Indicates whether the device detected presence. Value can be found in the published state on the <code>presence</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> presence is ON, if <code>false</code> OFF.</p><h3 id="delay-numeric" tabindex="-1"><a class="header-anchor" href="#delay-numeric" aria-hidden="true">#</a> Delay (numeric)</h3><p>light off delay. Value can be found in the published state on the <code>delay</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;delay&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>1000</code>. The unit of this value is <code>sec</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',75),u={},p=(0,t(983744).Z)(u,[["render",function(e,o){const t=(0,d.up)("RouterLink");return(0,d.wg)(),(0,d.iD)("div",null,[(0,d.kq)(" !!!! "),(0,d.kq)(" ATTENTION: This file is auto-generated through docgen! "),(0,d.kq)(' You can only edit the "Notes"-Section between the two comment lines "Notes BEGIN" and "Notes END". '),(0,d.kq)(' Do not use h1 or h2 heading within "## Notes"-Section. '),(0,d.kq)(" !!!! "),i,(0,d._)("table",null,[n,(0,d._)("tbody",null,[a,(0,d._)("tr",null,[l,(0,d._)("td",null,[(0,d.Wm)(t,{to:"/supported-devices/#v=Tuya"},{default:(0,d.w5)((()=>[(0,d.Uk)("Tuya")])),_:1})])]),c,h,s])]),(0,d.kq)(' Notes BEGIN: You can edit here. Add "## Notes" headline if not already present. '),(0,d.kq)(" Notes END: Do not edit below this line "),r])}]])}}]);