"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[39599],{968272:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-652929c5","path":"/guide/usage/integrations/home_assistant.html","title":"Home Assistant","lang":"en-US","frontmatter":{"pageClass":"content-page","sidebar":"auto"},"excerpt":"","headers":[{"level":2,"title":"MQTT discovery","slug":"mqtt-discovery","link":"#mqtt-discovery","children":[]},{"level":2,"title":"Device/group page","slug":"device-group-page","link":"#device-group-page","children":[]},{"level":2,"title":"Home Assistant device registry","slug":"home-assistant-device-registry","link":"#home-assistant-device-registry","children":[]},{"level":2,"title":"Customizing discovery","slug":"customizing-discovery","link":"#customizing-discovery","children":[]},{"level":2,"title":"Responding to button clicks","slug":"responding-to-button-clicks","link":"#responding-to-button-clicks","children":[{"level":3,"title":"Via MQTT device trigger (recommended)","slug":"via-mqtt-device-trigger-recommended","link":"#via-mqtt-device-trigger-recommended","children":[]},{"level":3,"title":"Via Home Assistant entity","slug":"via-home-assistant-entity","link":"#via-home-assistant-entity","children":[]},{"level":3,"title":"Via MQTT","slug":"via-mqtt","link":"#via-mqtt","children":[]}]},{"level":2,"title":"Groups","slug":"groups","link":"#groups","children":[]},{"level":2,"title":"Overriding discovery properties","slug":"overriding-discovery-properties","link":"#overriding-discovery-properties","children":[{"level":3,"title":"Changing supported_color_modes","slug":"changing-supported-color-modes","link":"#changing-supported-color-modes","children":[]},{"level":3,"title":"Exposing switch as a light","slug":"exposing-switch-as-a-light","link":"#exposing-switch-as-a-light","children":[]},{"level":3,"title":"Changing device properties","slug":"changing-device-properties","link":"#changing-device-properties","children":[]}]},{"level":2,"title":"Using a custom name for the device and entities","slug":"using-a-custom-name-for-the-device-and-entities","link":"#using-a-custom-name-for-the-device-and-entities","children":[]},{"level":2,"title":"Controlling Zigbee2MQTT via Home Assistant","slug":"controlling-zigbee2mqtt-via-home-assistant","link":"#controlling-zigbee2mqtt-via-home-assistant","children":[]},{"level":2,"title":"Zigbee Network Map (Custom Card)","slug":"zigbee-network-map-custom-card","link":"#zigbee-network-map-custom-card","children":[]}],"git":{"updatedTime":1721326626000},"filePathRelative":"guide/usage/integrations/home_assistant.md"}')},798569:(n,s,a)=>{a.r(s),a.d(s,{default:()=>P});var e=a(166252);const t=a.p+"assets/img/home_assistant_change_name.72aae626.png",i=a.p+"assets/img/home_assistant_device_registry.d82585b5.png",l=(0,e._)("h1",{id:"home-assistant",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#home-assistant","aria-hidden":"true"},"#"),(0,e.Uk)(" Home Assistant")],-1),o=(0,e._)("h2",{id:"mqtt-discovery",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#mqtt-discovery","aria-hidden":"true"},"#"),(0,e.Uk)(" MQTT discovery")],-1),p={href:"https://www.home-assistant.io/integrations/mqtt#mqtt-discovery",target:"_blank",rel:"noopener noreferrer"},c=(0,e._)("p",null,"To achieve the best possible integration (including MQTT discovery):",-1),u=(0,e._)("li",null,[(0,e.Uk)("In your "),(0,e._)("strong",null,"Zigbee2MQTT"),(0,e.Uk)(),(0,e._)("code",null,"configuration.yaml"),(0,e.Uk)(" set "),(0,e._)("code",null,"homeassistant: true")],-1),r={href:"https://www.home-assistant.io/integrations/mqtt/",target:"_blank",rel:"noopener noreferrer"},d=(0,e._)("h2",{id:"device-group-page",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#device-group-page","aria-hidden":"true"},"#"),(0,e.Uk)(" Device/group page")],-1),k=(0,e._)("em",null,"Visit device",-1),v=(0,e._)("code",null,"url",-1),m=(0,e._)("h2",{id:"home-assistant-device-registry",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#home-assistant-device-registry","aria-hidden":"true"},"#"),(0,e.Uk)(" Home Assistant device registry")],-1),g={href:"https://developers.home-assistant.io/docs/en/device_registry_index.html",target:"_blank",rel:"noopener noreferrer"},b=(0,e._)("code",null,"entity_id",-1),h=(0,e._)("code",null,"friendly_name",-1),y=(0,e._)("p",null,[(0,e._)("img",{src:t,alt:"Changing name and device ID via web interface"})],-1),_=(0,e._)("p",null,[(0,e._)("img",{src:i,alt:"Device registry"})],-1),f=(0,e._)("h2",{id:"customizing-discovery",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#customizing-discovery","aria-hidden":"true"},"#"),(0,e.Uk)(" Customizing discovery")],-1),q=(0,e._)("h2",{id:"responding-to-button-clicks",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#responding-to-button-clicks","aria-hidden":"true"},"#"),(0,e.Uk)(" Responding to button clicks")],-1),w=(0,e._)("p",null,"To respond to button clicks (e.g. WXKG01LM) you can use one of the following three Home Assistant configurations.",-1),T=(0,e._)("h3",{id:"via-mqtt-device-trigger-recommended",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#via-mqtt-device-trigger-recommended","aria-hidden":"true"},"#"),(0,e.Uk)(" Via MQTT device trigger (recommended)")],-1),U={href:"https://www.home-assistant.io/integrations/device_trigger.mqtt/",target:"_blank",rel:"noopener noreferrer"},x=(0,e._)("strong",null,"once the event is triggered on the device at least once",-1),z=(0,e.uE)('<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">automation</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button click\n    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">device_id</span><span class="token punctuation">:</span> ad44cabee4c646f493814306aa6446e1\n      <span class="token key atrule">discovery_id</span><span class="token punctuation">:</span> 0x000b57fffecb472d action_arrow_left_click\n      <span class="token key atrule">domain</span><span class="token punctuation">:</span> mqtt\n      <span class="token key atrule">platform</span><span class="token punctuation">:</span> device\n      <span class="token key atrule">subtype</span><span class="token punctuation">:</span> arrow_left_click\n      <span class="token key atrule">type</span><span class="token punctuation">:</span> action\n    <span class="token key atrule">action</span><span class="token punctuation">:</span>\n      <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.my_bulb_light\n      <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),M=(0,e._)("em",null,"Via Home Assistant entity",-1),Q=(0,e._)("code",null,"homeassistant: {legacy_triggers: false}",-1),A=(0,e.uE)('<h3 id="via-home-assistant-entity" tabindex="-1"><a class="header-anchor" href="#via-home-assistant-entity" aria-hidden="true">#</a> Via Home Assistant entity</h3><p>This method work by responding to the state change event of a sensor.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">automation</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button click\n    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>\n      <span class="token key atrule">platform</span><span class="token punctuation">:</span> state\n      <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> sensor.my_switch_click\n      <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">&#39;single&#39;</span>\n    <span class="token key atrule">action</span><span class="token punctuation">:</span>\n      <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.my_bulb_light\n      <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="via-mqtt" tabindex="-1"><a class="header-anchor" href="#via-mqtt" aria-hidden="true">#</a> Via MQTT</h3><p>As an alternative to the above way of integrating, you can also listen to MQTT topics.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">automation</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">alias</span><span class="token punctuation">:</span> Respond to button clicks\n    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>\n      <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt\n      <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt/&lt;FRIENDLY_NAME&#39;</span>\n    <span class="token key atrule">condition</span><span class="token punctuation">:</span>\n      <span class="token key atrule">condition</span><span class="token punctuation">:</span> template\n      <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ &quot;single&quot; == trigger.payload_json.click }}&#39;</span>\n    <span class="token key atrule">action</span><span class="token punctuation">:</span>\n      <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> light.bedroom\n      <span class="token key atrule">service</span><span class="token punctuation">:</span> light.toggle\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="groups" tabindex="-1"><a class="header-anchor" href="#groups" aria-hidden="true">#</a> Groups</h2><p>Groups discovery is supported for groups of lights, switches, locks and covers. For other types you have to manually create a config in the Home Assistant <code>configuration.yaml</code>.</p><h2 id="overriding-discovery-properties" tabindex="-1"><a class="header-anchor" href="#overriding-discovery-properties" aria-hidden="true">#</a> Overriding discovery properties</h2>',9),H={href:"https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/Koenkk/zigbee2mqtt/blob/03ba647dc6b5f299f8f3ab441712999fcb3a253e/lib/extension/homeassistant.ts",target:"_blank",rel:"noopener noreferrer"},j=(0,e._)("h3",{id:"changing-supported-color-modes",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#changing-supported-color-modes","aria-hidden":"true"},"#"),(0,e.Uk)(" Changing "),(0,e._)("code",null,"supported_color_modes")],-1),C=(0,e._)("p",null,[(0,e.Uk)("This is useful for switching light bulbs from reporting values from X/Y (which is the default) to reporting in hue / saturation (which is what bulbs report color in when changing via hue or saturation, such as with the "),(0,e._)("code",null,"hue_move"),(0,e.Uk)(" and "),(0,e._)("code",null,"saturation_move"),(0,e.Uk)(" commands).")],-1),R={href:"https://www.home-assistant.io/integrations/light.mqtt/#supported_color_modes",target:"_blank",rel:"noopener noreferrer"},I=(0,e._)("code",null,"supported_color_modes",-1),W=(0,e.uE)('<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&quot;0x12345678&quot;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_light\n    <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>\n      <span class="token key atrule">light</span><span class="token punctuation">:</span>\n        <span class="token key atrule">supported_color_modes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;hs&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;color_temp&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exposing-switch-as-a-light" tabindex="-1"><a class="header-anchor" href="#exposing-switch-as-a-light" aria-hidden="true">#</a> Exposing switch as a light</h3><p>If your device is currently discovered as a switch and you want to discover it as a light, the following config in the Zigbee2MQTT <code>configuration.yaml</code> can be used:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&quot;0x12345678&quot;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_switch\n    <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>\n      <span class="token key atrule">switch</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> light\n        <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light\n      <span class="token key atrule">light</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n        <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n        <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state }}&#39;</span>\n      <span class="token comment"># OR if your devices has multiple endpoints (e.g. left/right)</span>\n      <span class="token key atrule">switch_left</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> light\n        <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light_left\n      <span class="token key atrule">light_left</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> my_switch_left\n        <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n        <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state_left }}&#39;</span>\n      <span class="token key atrule">switch_right</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> light\n        <span class="token key atrule">object_id</span><span class="token punctuation">:</span> light_right\n      <span class="token key atrule">light_right</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> my_switch_right\n        <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n        <span class="token key atrule">state_value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{ value_json.state_right }}&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changing-device-properties" tabindex="-1"><a class="header-anchor" href="#changing-device-properties" aria-hidden="true">#</a> Changing device properties</h3><p>As an advanced example to show changing any MQTT property can be overridden, the following configuration changes the <code>suggested_area</code> property of the <code>device</code>. The example shows that you can just copy the given MQTT discovery hierarchy underneath the <code>homeassistant</code> property (given that <code>suggested_area</code> is underneath the <code>device</code> property). Please note, that other <code>device</code> properties are possibly set by Zigbee2MQTT (e.g. <code>manufacturer</code>).</p>',6),D={href:"https://www.home-assistant.io/integrations/light.mqtt/#device",target:"_blank",rel:"noopener noreferrer"},N=(0,e._)("code",null,"suggested area",-1),E=(0,e.uE)('<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&quot;0x12345678&quot;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> my_light\n    <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>\n      <span class="token key atrule">device</span><span class="token punctuation">:</span>\n        <span class="token key atrule">suggested_area</span><span class="token punctuation">:</span> <span class="token string">&#39;Living Room&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-a-custom-name-for-the-device-and-entities" tabindex="-1"><a class="header-anchor" href="#using-a-custom-name-for-the-device-and-entities" aria-hidden="true">#</a> Using a custom name for the device and entities</h2><p>In order to get a more readable name for the device and entities in Home Assistant, a specific name for Home Assistant can be set in the device configuration. If set, this name will be used instead of <code>friendly_name</code>.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&quot;0x12345678&quot;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> living_room/temperature_sensor\n    <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> Living Room Temperature Sensor\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="controlling-zigbee2mqtt-via-home-assistant" tabindex="-1"><a class="header-anchor" href="#controlling-zigbee2mqtt-via-home-assistant" aria-hidden="true">#</a> Controlling Zigbee2MQTT via Home Assistant</h2><p>The following Home Assistant configuration allows you to control Zigbee2MQTT from Home Assistant.</p>',6),V=(0,e._)("code",null,"configuration.yaml",-1),L={href:"https://www.home-assistant.io/docs/configuration/packages/",target:"_blank",rel:"noopener noreferrer"},O=(0,e._)("code",null,"zigbee2mqtt.yaml",-1),S=(0,e.uE)('<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># Input number for joining time remaining (in minutes)</span>\n<span class="token key atrule">input_number</span><span class="token punctuation">:</span>\n  <span class="token key atrule">zigbee2mqtt_join_minutes</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Zigbee2MQTT join minutes&quot;</span>\n    <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token number">2</span>\n    <span class="token key atrule">min</span><span class="token punctuation">:</span> <span class="token number">1</span>\n    <span class="token key atrule">max</span><span class="token punctuation">:</span> <span class="token number">5</span>\n    <span class="token key atrule">step</span><span class="token punctuation">:</span> <span class="token number">1</span>\n    <span class="token key atrule">mode</span><span class="token punctuation">:</span> slider\n\n<span class="token comment"># Input text to input Zigbee2MQTT friendly_name for scripts</span>\n<span class="token key atrule">input_text</span><span class="token punctuation">:</span>\n  <span class="token key atrule">zigbee2mqtt_new_name</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT New Name\n    <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&quot;mdi:moon-new&quot;</span>\n\n<span class="token comment"># Input select for choosing Zigbee2MQTT devices</span>\n<span class="token key atrule">input_select</span><span class="token punctuation">:</span>\n  <span class="token key atrule">zigbee2mqtt_old_name_select</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Old Name\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&quot;mdi:moon-full&quot;</span>\n    <span class="token key atrule">options</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> Initial Option\n  <span class="token key atrule">zigbee2mqtt_remove_select</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Remove\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&quot;mdi:trash-can&quot;</span>\n    <span class="token key atrule">options</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> Initial Option\n\n<span class="token comment"># Input boolean to set the force remove flag for devices</span>\n<span class="token key atrule">input_boolean</span><span class="token punctuation">:</span>\n  <span class="token key atrule">zigbee2mqtt_force_remove</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> Zigbee2MQTT Force Remove\n    <span class="token key atrule">initial</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> mdi<span class="token punctuation">:</span>alert<span class="token punctuation">-</span>remove\n\n<span class="token comment"># Scripts for renaming &amp; removing devices</span>\n<span class="token key atrule">script</span><span class="token punctuation">:</span>\n  <span class="token key atrule">zigbee2mqtt_rename</span><span class="token punctuation">:</span>\n    <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee2MQTT Rename\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&quot;mdi:pencil&quot;</span>\n    <span class="token key atrule">sequence</span><span class="token punctuation">:</span>\n      <span class="token key atrule">service</span><span class="token punctuation">:</span> mqtt.publish\n      <span class="token key atrule">data_template</span><span class="token punctuation">:</span>\n        <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/request/device/rename\n        <span class="token key atrule">payload_template</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>\n          <span class="token punctuation">{</span>\n            <span class="token key atrule">&quot;from&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_select.zigbee2mqtt_old_name_select&#39;) }}&quot;</span><span class="token punctuation">,</span>\n            <span class="token key atrule">&quot;to&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_text.zigbee2mqtt_new_name&#39;) }}&quot;</span>\n          <span class="token punctuation">}</span>\n  <span class="token key atrule">zigbee2mqtt_remove</span><span class="token punctuation">:</span>\n    <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee2MQTT Remove\n    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">&quot;mdi:trash-can&quot;</span>\n    <span class="token key atrule">sequence</span><span class="token punctuation">:</span>\n      <span class="token key atrule">service</span><span class="token punctuation">:</span> mqtt.publish\n      <span class="token key atrule">data_template</span><span class="token punctuation">:</span>\n        <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/request/device/remove\n        <span class="token key atrule">payload_template</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>\n          <span class="token punctuation">{</span>\n            <span class="token key atrule">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{ states(&#39;input_select.zigbee2mqtt_remove_select&#39;) }}&quot;</span><span class="token punctuation">,</span>\n            <span class="token key atrule">&quot;force&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> is_state(&#39;input_boolean.zigbee2mqtt_force_remove&#39;<span class="token punctuation">,</span> &#39;on&#39;) <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n\n\n<span class="token key atrule">automation</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&quot;zigbee2mqtt_create_notification_on_successful_interview&quot;</span>\n    <span class="token key atrule">alias</span><span class="token punctuation">:</span> Zigbee Device Joined Notification\n    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>\n      <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt\n      <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">&#39;zigbee2mqtt/bridge/event&#39;</span>\n    <span class="token key atrule">condition</span><span class="token punctuation">:</span>\n      <span class="token key atrule">condition</span><span class="token punctuation">:</span> template\n      <span class="token key atrule">value_template</span><span class="token punctuation">:</span> <span class="token string">&#39;{{trigger.payload_json.type == &quot;device_interview&quot; and trigger.payload_json.data.status == &quot;successful&quot; and trigger.payload_json.data.supported}}&#39;</span>\n    <span class="token key atrule">action</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> persistent_notification.create\n        <span class="token key atrule">data_template</span><span class="token punctuation">:</span>\n          <span class="token key atrule">title</span><span class="token punctuation">:</span> Device joined the Zigbee2MQTT network\n          <span class="token key atrule">message</span><span class="token punctuation">:</span> &quot;Name<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.friendly_name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token key atrule">Vendor</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.vendor<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token key atrule">Model</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.model<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token key atrule">Description</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.payload_json.data.definition.description<span class="token punctuation">}</span><span class="token punctuation">}</span>&quot;\n\n  <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&quot;zigbee2mqtt_update_devices_list&quot;</span>\n    <span class="token key atrule">alias</span><span class="token punctuation">:</span> Update Zigbee Devices List\n    <span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>\n    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt\n        <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/event\n      <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> mqtt\n        <span class="token key atrule">topic</span><span class="token punctuation">:</span> zigbee2mqtt/bridge/response/device/rename\n      <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> homeassistant\n        <span class="token key atrule">event</span><span class="token punctuation">:</span> start\n    <span class="token key atrule">condition</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token key atrule">action</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">delay</span><span class="token punctuation">:</span>\n          <span class="token key atrule">hours</span><span class="token punctuation">:</span> <span class="token number">0</span>\n          <span class="token key atrule">minutes</span><span class="token punctuation">:</span> <span class="token number">0</span>\n          <span class="token key atrule">seconds</span><span class="token punctuation">:</span> <span class="token number">1</span>\n          <span class="token key atrule">milliseconds</span><span class="token punctuation">:</span> <span class="token number">0</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> input_select.set_options\n        <span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token key atrule">data</span><span class="token punctuation">:</span>\n          <span class="token key atrule">options</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n            {%- set find_integration = &#39;mqtt&#39; %} \n             {%- set devices = states | map(attribute=&#39;entity_id&#39;) | map(&#39;device_id&#39;) | unique | reject(&#39;eq&#39;,None) | list %}\n             {%- set ns = namespace(entities = []) %}\n             {%- for device in devices %}\n               {%- set ids = device_attr(device, &#39;identifiers&#39;) | list | first %}\n               {%- if ids and ids | length == 2 and ids[0] == find_integration %}\n                 {% set names = device_attr(device, &#39;name&#39;).split(&#39;\\n&#39;) | list %}\n                 {%- set ns.entities = ns.entities + names %}\n               {%- endif %}\n             {%- endfor %}\n             {{ ns.entities}}</span>\n        <span class="token key atrule">target</span><span class="token punctuation">:</span>\n          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> input_select.zigbee2mqtt_old_name_select\n            <span class="token punctuation">-</span> input_select.zigbee2mqtt_remove_select\n      <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> input_text.set_value\n        <span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token key atrule">data</span><span class="token punctuation">:</span>\n          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>\n        <span class="token key atrule">target</span><span class="token punctuation">:</span>\n          <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> input_text.zigbee2mqtt_new_name\n    <span class="token key atrule">mode</span><span class="token punctuation">:</span> single\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following is an example lovelace card configuration.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">title</span><span class="token punctuation">:</span> Zigbee2MQTT\n<span class="token key atrule">type</span><span class="token punctuation">:</span> entities\n<span class="token key atrule">show_header_toggle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n<span class="token key atrule">entities</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> binary_sensor.zigbee2mqtt_bridge_connection_state\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_version\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_coordinator_version\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> switch.zigbee2mqtt_bridge_permit_join\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_number.zigbee2mqtt_join_minutes\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> sensor.zigbee2mqtt_bridge_permit_join_timeout\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_select.zigbee2mqtt_old_name_select\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_text.zigbee2mqtt_new_name\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> script.zigbee2mqtt_rename\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> divider\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_select.zigbee2mqtt_remove_select\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> input_boolean.zigbee2mqtt_force_remove\n  <span class="token punctuation">-</span> <span class="token key atrule">entity</span><span class="token punctuation">:</span> script.zigbee2mqtt_remove\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zigbee-network-map-custom-card" tabindex="-1"><a class="header-anchor" href="#zigbee-network-map-custom-card" aria-hidden="true">#</a> Zigbee Network Map (Custom Card)</h2>',4),F={href:"https://github.com/azuwis/zigbee2mqtt-networkmap/",target:"_blank",rel:"noopener noreferrer"},G={},P=(0,a(983744).Z)(G,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon"),t=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)("div",null,[l,o,(0,e._)("p",null,[(0,e.Uk)("The easiest way to integrate Zigbee2MQTT with Home Assistant is by using "),(0,e._)("a",p,[(0,e.Uk)("MQTT discovery"),(0,e.Wm)(a)]),(0,e.Uk)(". This allows Zigbee2MQTT to automatically add devices to Home Assistant.")]),c,(0,e._)("ul",null,[u,(0,e._)("li",null,[(0,e.Uk)("Enable the "),(0,e._)("a",r,[(0,e.Uk)("MQTT integration"),(0,e.Wm)(a)]),(0,e.Uk)(" in Home Assistant")])]),d,(0,e._)("p",null,[(0,e.Uk)("Since Home Assistant 2021.11 the device/group page in Home Assistant can directly link to the frontend ("),k,(0,e.Uk)(" button). To enable this set the "),v,(0,e.Uk)(" in the "),(0,e.Wm)(t,{to:"/guide/configuration/frontend.html"},{default:(0,e.w5)((()=>[(0,e.Uk)("frontend")])),_:1}),(0,e.Uk)(" configuration.")]),m,(0,e._)("p",null,[(0,e.Uk)("When using Home Assistant MQTT discovery, Zigbee2MQTT integrates with the "),(0,e._)("a",g,[(0,e.Uk)("Home Assistant device registry"),(0,e.Wm)(a)]),(0,e.Uk)(". This allows you to change the Home Assistant "),b,(0,e.Uk)(" and "),h,(0,e.Uk)(" from the Home Assistant web interface without having to restart Home Assistant. It also makes it possible to show which entities belong to which device.")]),y,_,f,(0,e._)("p",null,[(0,e.Uk)("The device specific configuration allows you to modify the discovery payload. Here you can also prevent a device from being discovered. See "),(0,e.Wm)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,e.w5)((()=>[(0,e.Uk)("Device specific configuration")])),_:1}),(0,e.Uk)(" for the available options.")]),q,w,T,(0,e._)("p",null,[(0,e._)("a",U,[(0,e.Uk)("MQTT device trigger"),(0,e.Wm)(a)]),(0,e.Uk)(" is the recommended way to respond to button clicks. The MQTT device triggers are discovered by Zigbee2MQTT "),x,(0,e.Uk)(".")]),z,(0,e._)("p",null,[(0,e.Uk)("If you only plan to use this and want to disable the "),M,(0,e.Uk)(" integration below, set "),Q,(0,e.Uk)(" (see "),(0,e.Wm)(t,{to:"/guide/configuration/homeassistant.html"},{default:(0,e.w5)((()=>[(0,e.Uk)("Configuration")])),_:1}),(0,e.Uk)(" for more info).")]),A,(0,e._)("p",null,[(0,e.Uk)("Any Home Assistant MQTT discovery property can be overridden on a device. Two examples are shown below. For a full and current list of discovery properties, see "),(0,e._)("a",H,[(0,e.Uk)("the Home Assistant MQTT Discovery integration"),(0,e.Wm)(a)]),(0,e.Uk)(" and "),(0,e._)("a",Z,[(0,e.Uk)("the Home Assistant extension"),(0,e.Wm)(a)]),(0,e.Uk)(" in the Zigbee2MQTT source code.")]),j,C,(0,e._)("p",null,[(0,e.Uk)("This example changes a "),(0,e._)("a",R,[(0,e.Uk)("light's "),I,(0,e.Uk)(" discovery property"),(0,e.Wm)(a)]),(0,e.Uk)(" to hue / saturation and color temperature:")]),W,(0,e._)("p",null,[(0,e.Uk)("This example changes the "),(0,e._)("a",D,[(0,e.Uk)("light's device's "),N,(0,e.Uk)(" discovery property"),(0,e.Wm)(a)]),(0,e.Uk)(' to "Living Room":')]),E,(0,e._)("p",null,[(0,e.Uk)("You can add it to the appropriate section of your "),V,(0,e.Uk)(", or you can add it as a "),(0,e._)("a",L,[(0,e.Uk)("Home Assistant Package"),(0,e.Wm)(a)]),(0,e.Uk)(" by adding the following to "),O,(0,e.Uk)(" in your packages folder.")]),S,(0,e._)("p",null,[(0,e._)("a",F,[(0,e.Uk)("Zigbee Network Map Home Assistant Custom Card"),(0,e.Wm)(a)]),(0,e.Uk)(".")])])}]])}}]);