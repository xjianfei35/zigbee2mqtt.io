"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[97548],{867120:(e,t,o)=>{o.r(t),o.d(t,{data:()=>n});const n=JSON.parse('{"key":"v-790fd1e2","path":"/devices/FreePad_LeTV_8.html","title":"DIYRuZ FreePad_LeTV_8 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"DIYRuZ FreePad_LeTV_8 control via MQTT","description":"Integrate your DIYRuZ FreePad_LeTV_8 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-12-01T19:02:25.000Z"},"excerpt":"","headers":[{"level":2,"title":"Notes","slug":"notes","link":"#notes","children":[]},{"level":2,"title":"Exposes","slug":"exposes","link":"#exposes","children":[{"level":3,"title":"Battery (numeric)","slug":"battery-numeric","link":"#battery-numeric","children":[]},{"level":3,"title":"Action (enum)","slug":"action-enum","link":"#action-enum","children":[]},{"level":3,"title":"Switch type (enum, button_1 endpoint)","slug":"switch-type-enum-button-1-endpoint","link":"#switch-type-enum-button-1-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_1 endpoint)","slug":"switch-actions-enum-button-1-endpoint","link":"#switch-actions-enum-button-1-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_2 endpoint)","slug":"switch-type-enum-button-2-endpoint","link":"#switch-type-enum-button-2-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_2 endpoint)","slug":"switch-actions-enum-button-2-endpoint","link":"#switch-actions-enum-button-2-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_3 endpoint)","slug":"switch-type-enum-button-3-endpoint","link":"#switch-type-enum-button-3-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_3 endpoint)","slug":"switch-actions-enum-button-3-endpoint","link":"#switch-actions-enum-button-3-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_4 endpoint)","slug":"switch-type-enum-button-4-endpoint","link":"#switch-type-enum-button-4-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_4 endpoint)","slug":"switch-actions-enum-button-4-endpoint","link":"#switch-actions-enum-button-4-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_5 endpoint)","slug":"switch-type-enum-button-5-endpoint","link":"#switch-type-enum-button-5-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_5 endpoint)","slug":"switch-actions-enum-button-5-endpoint","link":"#switch-actions-enum-button-5-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_6 endpoint)","slug":"switch-type-enum-button-6-endpoint","link":"#switch-type-enum-button-6-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_6 endpoint)","slug":"switch-actions-enum-button-6-endpoint","link":"#switch-actions-enum-button-6-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_7 endpoint)","slug":"switch-type-enum-button-7-endpoint","link":"#switch-type-enum-button-7-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_7 endpoint)","slug":"switch-actions-enum-button-7-endpoint","link":"#switch-actions-enum-button-7-endpoint","children":[]},{"level":3,"title":"Switch type (enum, button_8 endpoint)","slug":"switch-type-enum-button-8-endpoint","link":"#switch-type-enum-button-8-endpoint","children":[]},{"level":3,"title":"Switch actions (enum, button_8 endpoint)","slug":"switch-actions-enum-button-8-endpoint","link":"#switch-actions-enum-button-8-endpoint","children":[]},{"level":3,"title":"Linkquality (numeric)","slug":"linkquality-numeric","link":"#linkquality-numeric","children":[]}]}],"git":{"updatedTime":1721326626000},"filePathRelative":"devices/FreePad_LeTV_8.md"}')},950240:(e,t,o)=>{o.r(t),o.d(t,{default:()=>_});var n=o(166252);const i=(0,n._)("h1",{id:"diyruz-freepad-letv-8",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#diyruz-freepad-letv-8","aria-hidden":"true"},"#"),(0,n.Uk)(" DIYRuZ FreePad_LeTV_8")],-1),c=(0,n._)("thead",null,[(0,n._)("tr",null,[(0,n._)("th"),(0,n._)("th")])],-1),d=(0,n._)("tr",null,[(0,n._)("td",null,"Model"),(0,n._)("td",null,"FreePad_LeTV_8")],-1),a=(0,n._)("td",null,"Vendor",-1),u=(0,n._)("tr",null,[(0,n._)("td",null,"Description"),(0,n._)("td",null,"LeTV 8key FreePad mod")],-1),s=(0,n._)("tr",null,[(0,n._)("td",null,"Exposes"),(0,n._)("td",null,"battery, action, switch_type, switch_actions, linkquality")],-1),h=(0,n._)("tr",null,[(0,n._)("td",null,"Picture"),(0,n._)("td",null,[(0,n._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/FreePad_LeTV_8.png",alt:"DIYRuZ FreePad_LeTV_8"})])],-1),l=(0,n._)("h2",{id:"notes",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#notes","aria-hidden":"true"},"#"),(0,n.Uk)(" Notes")],-1),p={href:"https://modkam.ru/?p=1791",target:"_blank",rel:"noopener noreferrer"},r=(0,n.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric" aria-hidden="true">#</a> Battery (numeric)</h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum" aria-hidden="true">#</a> Action (enum)</h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>*_single</code>, <code>*_double</code>, <code>*_triple</code>, <code>*_quadruple</code>, <code>*_release</code>.</p><h3 id="switch-type-enum-button-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-1-endpoint" aria-hidden="true">#</a> Switch type (enum, button_1 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_1&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-1-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_1 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_1&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-2-endpoint" aria-hidden="true">#</a> Switch type (enum, button_2 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_2&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-2-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_2 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_2&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-3-endpoint" aria-hidden="true">#</a> Switch type (enum, button_3 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_3&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-3-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_3 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_3&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-4-endpoint" aria-hidden="true">#</a> Switch type (enum, button_4 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_4&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-4-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_4 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_4&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-5-endpoint" aria-hidden="true">#</a> Switch type (enum, button_5 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_5&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-5-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_5 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_5&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-6-endpoint" aria-hidden="true">#</a> Switch type (enum, button_6 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_6&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-6-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_6 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_6&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-7-endpoint" aria-hidden="true">#</a> Switch type (enum, button_7 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_7&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-7-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_7 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_7&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="switch-type-enum-button-8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-enum-button-8-endpoint" aria-hidden="true">#</a> Switch type (enum, button_8 endpoint)</h3><p>Value can be found in the published state on the <code>switch_type_button_8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_button_8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_button_8&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>momentary</code>, <code>multifunction</code>.</p><h3 id="switch-actions-enum-button-8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-actions-enum-button-8-endpoint" aria-hidden="true">#</a> Switch actions (enum, button_8 endpoint)</h3><p>Value can be found in the published state on the <code>switch_actions_button_8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_actions_button_8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_actions_button_8&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',39),b={},_=(0,o(983744).Z)(b,[["render",function(e,t){const o=(0,n.up)("RouterLink"),b=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[(0,n.kq)(" !!!! "),(0,n.kq)(" ATTENTION: This file is auto-generated through docgen! "),(0,n.kq)(' You can only edit the "Notes"-Section between the two comment lines "Notes BEGIN" and "Notes END". '),(0,n.kq)(' Do not use h1 or h2 heading within "## Notes"-Section. '),(0,n.kq)(" !!!! "),i,(0,n._)("table",null,[c,(0,n._)("tbody",null,[d,(0,n._)("tr",null,[a,(0,n._)("td",null,[(0,n.Wm)(o,{to:"/supported-devices/#v=DIYRuZ"},{default:(0,n.w5)((()=>[(0,n.Uk)("DIYRuZ")])),_:1})])]),u,s,h])]),(0,n.kq)(' Notes BEGIN: You can edit here. Add "## Notes" headline if not already present. '),l,(0,n._)("p",null,[(0,n._)("a",p,[(0,n.Uk)("LeTV 8key FreePad mod"),(0,n.Wm)(b)])]),(0,n.kq)(" Notes END: Do not edit below this line "),r])}]])}}]);